// Code generated by mockery v2.39.1. DO NOT EDIT.

package repository

import (
	context "context"

	logging "github.com/Shabashkin93/warning_tracker/pkg/logging"
	mock "github.com/stretchr/testify/mock"
)

// MockDataBase is an autogenerated mock type for the DataBase type
type MockDataBase struct {
	mock.Mock
}

type MockDataBase_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDataBase) EXPECT() *MockDataBase_Expecter {
	return &MockDataBase_Expecter{mock: &_m.Mock}
}

// Shutdown provides a mock function with given fields: ctx, logger
func (_m *MockDataBase) Shutdown(ctx context.Context, logger logging.Logger) {
	_m.Called(ctx, logger)
}

// MockDataBase_Shutdown_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Shutdown'
type MockDataBase_Shutdown_Call struct {
	*mock.Call
}

// Shutdown is a helper method to define mock.On call
//   - ctx context.Context
//   - logger logging.Logger
func (_e *MockDataBase_Expecter) Shutdown(ctx interface{}, logger interface{}) *MockDataBase_Shutdown_Call {
	return &MockDataBase_Shutdown_Call{Call: _e.mock.On("Shutdown", ctx, logger)}
}

func (_c *MockDataBase_Shutdown_Call) Run(run func(ctx context.Context, logger logging.Logger)) *MockDataBase_Shutdown_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(logging.Logger))
	})
	return _c
}

func (_c *MockDataBase_Shutdown_Call) Return() *MockDataBase_Shutdown_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDataBase_Shutdown_Call) RunAndReturn(run func(context.Context, logging.Logger)) *MockDataBase_Shutdown_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDataBase creates a new instance of MockDataBase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDataBase(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDataBase {
	mock := &MockDataBase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
