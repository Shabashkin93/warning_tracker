version: "3.8"

services:
  cache:
    image: redis:alpine
    command: redis-server
    restart: on-failure:3
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes: 
      - cache:/data
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    env_file: .env
    networks:
      - default
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_BACKUP_TIME=${REDIS_BACKUP_TIME}

  db:
    image: postgres:alpine
    env_file: .env
    networks:
      - default
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
      - POSTGRES_SSL_MODE=${POSTGRES_SSL_MODE}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: on-failure:3
    volumes:
      - db:/var/lib/postgresql/data

  server:
    restart: no
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - cache
      - db
    networks:
      - default
    ports:
    - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - "./logs:/logs/"
    environment:
      - REDIS_ADDRESS=cache
      - POSTGRES_ADDRESS=db
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_BACKUP_TIME=${REDIS_BACKUP_TIME}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
      - POSTGRES_SSL_MODE=${POSTGRES_SSL_MODE}
      - POSTGRES_PORT=${POSTGRES_PORT}

  prometheus:
      image: prom/prometheus:latest
      restart: no
      depends_on:
        - server
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "19090:9090"

volumes:
  redis:
  redis-config:
  cache:
  db:
